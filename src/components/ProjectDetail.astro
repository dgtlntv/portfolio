---
import { getEntry } from 'astro:content'
import Article from './Article/Article'

// Import all the components that MDX might use
import FloatImage from './Article/FloatImage.astro'
import FanImages from './Article/FanImages.astro'
import DocumentSkeleton from './DocumentSkeleton.astro'
import ColorPaletteMockup from './ColorPaletteMockup.astro'
import MetricsMockup from './MetricsMockup.astro'
import ImageGallery from './Article/ImageGallery'
// import { GitHubCodeExplorer } from './GitHubCodeExplorer'
// import { CodeBlock } from './MDX/CodeBlock'
// import { TagList } from './MDX/TagList'

export interface Props {
  slug: string
}

const { slug } = Astro.props

const project = await getEntry('projects', slug)

if (!project) {
  return Astro.redirect('/404')
}

const { Content } = await project.render()
const projectData = project.data

// Define components to be available in MDX
const components = {
  // Static Astro components
  FloatImage,
  FanImages,
  DocumentSkeleton,
  ColorPaletteMockup,
  MetricsMockup,
  
  // Interactive React components (with client:load)
  ImageGallery: ImageGallery,
  // GitHubCodeExplorer: GitHubCodeExplorer,
  // TagList: TagList,
  
  // Enhanced HTML elements
  h1: 'h1',
  h2: 'h2', 
  h3: 'h3',
  h4: 'h4',
  h5: 'h5',
  h6: 'h6',
  ul: 'ul',
  ol: 'ol',
  li: 'li',
  blockquote: 'blockquote',
  pre: 'pre',
  // code: CodeBlock,
  img: 'img',
}
---

<Article
  stats={projectData.stats || []}
  title={projectData.title}
  heroLocation={projectData.heroLocation || "center"}
  heroUrl={projectData.coverImage || ""}
>
  <Content components={components} />
</Article>